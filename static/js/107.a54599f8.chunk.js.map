{"version":3,"file":"static/js/107.a54599f8.chunk.js","mappings":"6NAEaA,E,QAAYC,GAAAA,IAAH,qI,iDC4FtB,EApEiB,WACf,IAAMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,EAASG,EAAAA,KACV,GAAE,CAACH,IAEJ,IAAMI,GAAmBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC/BC,GAAcF,EAAAA,EAAAA,IAAYG,EAAAA,IAC1BC,GAAYJ,EAAAA,EAAAA,IAAYK,EAAAA,IACxBC,GAAQN,EAAAA,EAAAA,IAAYO,EAAAA,IACpBC,GAAeR,EAAAA,EAAAA,IAAYS,EAAAA,IAC3BC,GAAiBV,EAAAA,EAAAA,IAAYW,EAAAA,IAC7BC,KACDJ,KAAkBE,MAAqBR,EAAYW,OAExD,OACE,+BACE,UAACpB,EAAD,YACE,SAAC,KAAD,CAASqB,MAAM,YAAf,UACE,SAAC,IAAD,OAEF,SAAC,KAAD,CAASA,MAAM,WAAf,UACE,gCAC0B,IAAvBZ,EAAYW,SACX,iCACE,SAAC,KAAD,CAAQE,KAAK,UACb,SAAC,KAAD,CAAQA,KAAK,cAIhBX,GACC,SAAC,KAAD,IACEE,IAAuB,IAAdF,GACX,SAAC,KAAD,IACEL,EAAiBc,QACnB,SAAC,KAAD,IACED,GACF,SAAC,KAAD,CACEI,QACER,GAAgBE,EAAhB,0CACuCF,EADvC,0BACqEE,EADrE,KAEIF,EAAY,0CACuBA,EADvB,kDAEyBE,EAFzB,SAMpB,SAAC,KAAD,CAAcM,QAAQ,sDAK5B,SAAC,KAAD,CACEC,SAAS,eACTC,aAAa,EACbC,cAAY,EACZC,kBAAgB,EAChBC,cAAc,EACdC,MAAM,UACNC,UAAW,IACXC,MAAO,CAAEC,MAAO,QAASC,SAAU,OAAQC,WAAY,aAKhE,C","sources":["pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\npadding-top: 100px;\nwidth: 800px;\ndisplay: flex;\nflex-direction: column;\nmargin: 0 auto;\nrow-gap:30px;\n`;","import React from 'react';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { Container } from './Contacts.styled';\nimport {\n  ErrorMessage,\n  Section,\n  ContactForm,\n  ContactList,\n  Filter,\n  Loader,\n  Notification,\n} from 'components';\n\nimport * as contactsOperations from 'redux/contactsOperations';\nimport {\n  getContacts,\n  getIsLoading,\n  getError,\n  getFilteredContacts,\n  getFilterByName,\n  getFilterByNumber,\n} from 'redux/selectors';\nimport { ToastContainer } from 'react-toastify';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = useSelector(getFilteredContacts);\n  const allContacts = useSelector(getContacts);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  const filterByName = useSelector(getFilterByName);\n  const filterByNumber = useSelector(getFilterByNumber);\n  const isFiltered =\n    (!!filterByName || !!filterByNumber) && !!allContacts.length;\n\n  return (\n    <>\n      <Container>\n        <Section title=\"Phonebook\">\n          <ContactForm />\n        </Section>\n        <Section title=\"Contacts\">\n          <>\n            {allContacts.length !== 0 && (\n              <>\n                <Filter name=\"name\" />\n                <Filter name=\"number\" />\n              </>\n            )}\n\n            {isLoading ? (\n              <Loader />\n            ) : error && isLoading === false ? (\n              <ErrorMessage />\n            ) : filteredContacts.length ? (\n              <ContactList />\n            ) : isFiltered ? (\n              <Notification\n                message={\n                  filterByName && filterByNumber\n                    ? `Nothing found by selected name \"${filterByName}\"  and number \"${filterByNumber}\"`\n                    : filterByName\n                    ? `Nothing found by selected name \"${filterByName}\" `\n                    : `Nothing found by selected number \"${filterByNumber}\" `\n                }\n              />\n            ) : (\n              <Notification message=\"There are no contacts in your phonebook yet\" />\n            )}\n          </>\n        </Section>\n\n        <ToastContainer\n          position=\"bottom-right\"\n          newestOnTop={false}\n          closeOnClick\n          pauseOnFocusLoss\n          pauseOnHover={false}\n          theme=\"colored\"\n          autoClose={4000}\n          style={{ width: '500px', fontSize: '28px', lineHeight: '1.2' }}\n        />\n      </Container>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Container","styled","dispatch","useDispatch","useEffect","contactsOperations","filteredContacts","useSelector","getFilteredContacts","allContacts","getContacts","isLoading","getIsLoading","error","getError","filterByName","getFilterByName","filterByNumber","getFilterByNumber","isFiltered","length","title","name","message","position","newestOnTop","closeOnClick","pauseOnFocusLoss","pauseOnHover","theme","autoClose","style","width","fontSize","lineHeight"],"sourceRoot":""}